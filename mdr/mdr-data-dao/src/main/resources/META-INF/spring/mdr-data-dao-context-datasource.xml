<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) [2013] [The FURTHeR Project]

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	">

	<!-- TODO: move this file to a data module. Maybe a dedicated data-dao module
		with a data source, an internal session factory and DAO OSGi exports. -->

	<!-- =========================================== -->
	<!-- Properties files -->
	<!-- =========================================== -->

	<!-- Property file locations: suppressed here because it might override
		the main context file's resources. The main context is responsible for defining
		them. -->

	<!-- =========================================== -->
	<!-- Annotation configuration -->
	<!-- =========================================== -->

	<context:annotation-config />

	<!-- =========================================== -->
	<!-- Data Layer -->
	<!-- =========================================== -->

	<!-- Session factory. Uses data source imported from an mdr-data module -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<!-- Hibernate configuration properties (read from a properties file) -->
		<property name="hibernateProperties">
			<props>
				<!-- ################################## -->
				<!-- Hibernate configuration -->
				<!-- ################################## -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>

				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<!-- DO NOT turn on hibernate.hbm2ddl.auto. This causes problems
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> -->

				<!-- ============================ -->
				<!--C3P0 connection pool config -->
				<!-- ============================ -->
				<!-- <prop key="c3p0.initialPoolSize">${c3p0.initialPoolSize}</prop>
					<prop key="c3p0.min_size">${c3p0.min_size}</prop> <prop key="c3p0.max_size">${c3p0.max_size}</prop>
					<prop key="c3p0.minPoolSize">${c3p0.minPoolSize}</prop> <prop key="c3p0.maxPoolSize">${c3p0.maxPoolSize}</prop>
					<prop key="c3p0.maxStatements">${c3p0.maxStatements}</prop> <prop key="c3p0.acquireRetryAttempts">${c3p0.acquireRetryAttempts}</prop>
					<prop key="c3p0.acquireIncrement">${c3p0.acquireIncrement}</prop> <prop key="c3p0.timeout">${c3p0.timeout}</prop>
					<prop key="c3p0.idleConnectionTestPeriod">${c3p0.idleConnectionTestPeriod}</prop>
					<prop key="c3p0.maxIdleTime">${c3p0.maxIdleTime}</prop> -->
			</props>
		</property>

		<!-- Using improved naming strategy -->
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.DefaultNamingStrategy" />
		</property>

		<!-- Reads package-level Hibernate annotations. Unfortunately, this has
			to be manually maintained for all model packages -->
		<property name="annotatedPackages">
			<list>
				<value>edu.utah.further.mdr.data.common.domain.asset</value>
				<value>edu.utah.further.mdr.data.impl.domain.asset</value>
			</list>
		</property>

		<!-- Mapping annotated classes using search patterns -->
		<property name="annotatedClasses">
			<bean class="edu.utah.further.core.util.io.ResourceMatchingFactoryBean">

				<!-- Use Apache Ant Pattern -->
				<property name="searchPatterns">
					<set>
						<value>
							classpath*:edu/utah/further/**/domain/**/*.class
						</value>
						<value>**/further-*.jar</value>
					</set>
				</property>

				<!-- Use Java regular expression to find all domain classes -->
				<property name="regexPatterns">
					<set>
						<value>^edu/utah/further/.*/domain/.*
						</value>
					</set>
				</property>

				<!-- Look for one of several class-level annotations -->
				<property name="resourceMatcher">
					<bean class="edu.utah.further.core.util.io.AnnotatedClassResourceMatcher">
						<constructor-arg index="0">
							<set>
								<value><![CDATA[javax.persistence.Entity]]></value>
								<value><![CDATA[javax.persistence.Embeddable]]></value>
								<value><![CDATA[javax.persistence.MappedSuperclass]]></value>
							</set>
						</constructor-arg>
					</bean>
				</property>

			</bean>
		</property>
	</bean>

	<!-- Hibernate data access template -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- =========================================== -->
	<!-- Transaction management -->
	<!-- =========================================== -->

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven />

	<!-- a PlatformTransactionManager is still required -->
	<bean id="mdrTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Create an alias because Spring expects this naming convention -->
	<alias name="mdrTransactionManager" alias="transactionManager" />

	<!-- =========================================== -->
	<!-- FURTHeR data layer -->
	<!-- =========================================== -->

	<!-- Component auto-detection configuration in the data layer package. Must
		come AFTER sessionFactory is declared for some strange reason when deployed
		to the ESB. -->
	<!-- <context:component-scan base-package="edu.utah.further.core.data" /> -->
	<bean id="dao" class="edu.utah.further.core.data.service.DaoHibernateImpl">
		<constructor-arg index="0" ref="sessionFactory" />
	</bean>

	<bean id="daoEager"
		class="edu.utah.further.core.data.service.DaoHibernateEagerImpl">
		<constructor-arg index="0" ref="sessionFactory" />
	</bean>

	<bean id="resourceDao"
		class="edu.utah.further.mdr.data.dao.internal.ResourceDaoHibernateImpl">
		<constructor-arg index="0" ref="sessionFactory" />
	</bean>

</beans>
