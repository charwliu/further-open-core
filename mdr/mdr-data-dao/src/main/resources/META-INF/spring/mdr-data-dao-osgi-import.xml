<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) [2013] [The FURTHeR Project]

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
	xmlns:ctx="http://www.springframework.org/schema/context" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/osgi-compendium
	http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd
	http://www.springframework.org/schema/osgi
    http://www.springframework.org/schema/osgi/spring-osgi.xsd">

	<!-- =========================================== -->
	<!-- Managed properties                          -->
	<!-- =========================================== -->

	<!--
		definitions using elements of the osgi namespace can be included in
		this file. There is no requirement to keep these definitions in a
		separate file if you do not want to. The rationale for keeping these
		definitions separate is to facilitate integration testing of the
		bundle outside of an OSGi container
	-->

	<!--Encrypted placeholder configurer -->
	<import resource="classpath:META-INF/core/util/core-util-encryption-sha1.xml" />
	<bean parent="propertiesEncryptor">
		<property name="properties" ref="mdrDataDaoProps" />
	</bean>

	<!-- Configuration Admin entry -->
	<osgix:cm-properties id="mdrDataDaoProps"
		persistent-id="further.mdr.data.dao">


		<!-- ################################## -->
		<!-- Data layer                         -->
		<!-- ################################## -->
		<!-- Hibernate configuration file name -->
		<!-- hibernate.config=main  -->

		<!-- Data source configuration name -->
		<!-- datasource.config=main-oracle -->

		<!-- ################################## -->
		<!-- Database configuration             -->
		<!-- ################################## -->
		<!-- Oracle dev database on further-repo  -->
		<!--
			Do not delete this comment or maven properties will not be replaced.
			Seems to be a maven bug when an at-sign immediately precedes a
			property placeholder. datasource.host=@${db.host}
		-->
		<prop key="datasource.url"></prop>
		<prop key="datasource.driver"></prop>
		<prop key="datasource.user"></prop>
		<prop key="datasource.password"></prop>
		<!--
			Note: this might not work with hbm2ddl create/update. See
			https://forum.hibernate.org/viewtopic.php?t=927555&highlight=
		-->
		<prop key="hibernate.default_schema"></prop>

		<!-- SQL implementation Hibernate dialect -->
		<prop key="hibernate.dialect"></prop>

		<!-- ################################## -->
		<!-- Hibernate configuration            -->
		<!-- ################################## -->

		<!-- ============================ -->
		<!-- Hibernate options            -->
		<!-- ============================ -->

		<!-- Turn on for SQL debugging  -->
		<prop key="hibernate.show_sql">false</prop>

		<!-- Generate schema? -->
		<prop key="hibernate.hbm2ddl.auto"></prop>

		<!-- ============================ -->
		<!--C3P0 connection pool config   -->
		<!-- ============================ -->

		<!--
			References for setting parameter values:
			http://www.hibernate.org/214.html
		-->
		<!-- http://forum.java.sun.com/thread.jspa?threadID=691105&tstart=0 -->
		<!-- Times are in seconds. -->
		<prop key="c3p0.initialPoolSize">5</prop>
		<prop key="c3p0.minPoolSize">5</prop>
		<prop key="c3p0.maxPoolSize">15</prop>
		<prop key="c3p0.maxStatements">50</prop>
		<prop key="c3p0.acquireRetryAttempts">1</prop>
		<prop key="c3p0.acquireIncrement">5</prop>
		<prop key="c3p0.testConnectionOnCheckin">false</prop>
		<!--
			Timeout: [1] set it to 100, if that doesn't work, [2] set it to 10.
		-->
		<prop key="c3p0.timeout">100</prop>
		<prop key="c3p0.idleConnectionTestPeriod">150</prop>
		<prop key="c3p0.maxIdleTime">1800</prop>
		
	</osgix:cm-properties>

	<!-- =========================================== -->
	<!-- Imported OSGi services                      -->
	<!-- =========================================== -->

	<!-- %%%%%%%%%%%%%%%%%%%%%%%% -->
	<!-- MDR persistence services -->
	<!-- %%%%%%%%%%%%%%%%%%%%%%%% -->

	<!--
		MDR data source. Note the OSGi injection filter by bean name, which
		must match the OSGi service's name exported by mdr-data*
		implementation modules.
	-->
	<osgi:reference id="dataSource" interface="javax.sql.DataSource"
		bean-name="mdrDataSource" />

</beans>
